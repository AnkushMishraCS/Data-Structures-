#include <iostream>

class MyVector {
    int *arr;
    int cap;
    int sz;

public:
    MyVector() {
        cap = 2;
        sz = 0;
        arr = new int[cap];
    }

    void push_back(int value) {
        if (sz == cap) {
            cap *= 2;
            int *newArr = new int[cap];
            for (int i = 0; i < sz; i++)
                newArr[i] = arr[i];
            delete[] arr;
            arr = newArr;
        }
        arr[sz++] = value;
    }

    void pop_back() {
        if (sz > 0)
            sz--;
    }

    int size() {
        return sz;
    }

    int capacity() {
        return cap;
    }

    int operator[](int index) {
        return arr[index];
    }

    ~MyVector() {
        delete[] arr;
    }
};

int main() {
    MyVector v;
    v.push_back(1);
    v.push_back(2);
    v.push_back(3);

    std::cout << "Size: " << v.size() << ", Capacity: " << v.capacity() << std::endl;
    
    v.pop_back();
    std::cout << "Size after pop: " << v.size() << ", Capacity: " << v.capacity() << std::endl;

    for (int i = 0; i < v.size(); i++)
        std::cout << v[i] << " ";

    return 0;
}
